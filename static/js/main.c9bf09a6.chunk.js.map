{"version":3,"sources":["Context/FavouritesContext.jsx","Context/SearchContext.jsx","components/Icons.Componet.jsx","components/Favourites.Component.jsx","notification/Notification.jsx","components/Search.Component.jsx","components/timeDate.jsx","components/Card.Component.jsx","pages/HomePage.jsx","components/Weather.Component.jsx","components/Forecast.Component.jsx","components/AddAndCopy.Component.jsx","pages/CityPage.jsx","App.js","index.js"],"names":["FavouritesContext","createContext","FavouritesProvider","props","useState","fave","setFave","items","localStorage","useEffect","Object","keys","map","e","fetch","then","res","json","result","id","coord","lat","name","temp","main","icon","weather","description","lon","console","log","Provider","value","children","SearchContext","SearchProvider","setWeather","forecast","setForecast","flag","setFlag","address","setAddress","view","setView","date","setDate","value2","value3","value4","value5","value6","Icon","rangeId","src","alt","className","Favourite","React","memo","useContext","setShowModel","handleChange","a","length","list","key","wait","onClick","trigger","Math","round","type","idx","splice","removeItem","del","indexOf","position","Header","to","handleView","Body","iconId","style","backgroundImage","Title","Text","width","height","Notification","message","content","content2","content3","href","target","rel","api","Search","cityname","useParams","notification","setNotification","iconan","useSpring","opacity","from","search","dir","sys","country","response","setTimeout","handleSelect","regix","split","city","onChange","onSelect","shouldFetchSuggestions","highlightFirstSuggestion","getInputProps","suggestions","getSuggestionItemProps","placeholder","faSearch","color","div","suggestion","UseDate","Date","today","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","getDate","month","hour","getHours","wish","time","toLocaleTimeString","hour12","minute","Card","size","faGithub","faFile","HomePage","transition","Weather","i","dt_txt","push","dt","slice","nativeName","capital","region","humidity","wind","speed","pressure","Forecast","gsDayNames","data","substring","dayName","getDay","AddandCopy","includes","preventDefault","prev","setItem","JSON","stringify","text","window","location","CityPage","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEaA,EAAoBC,0BAEpBC,EAAqB,SAACC,GAAW,IAAD,EAClBC,mBAAS,IADS,mBACpCC,EADoC,KAC7BC,EAD6B,KAErCC,EAAK,eAAOC,cAwBhB,OAtBFC,qBAAU,WAERC,OAAOC,KAAKJ,GAAOK,KAAI,SAACC,GACtB,IACEC,MAAM,qDAAD,OAAsDD,EAAtD,4CACFE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLZ,GAAQ,SAAAD,GAAI,4BAAQA,GAAR,CAAc,CACxBc,GAAGD,EAAOE,MAAMC,IAChBC,KAAKJ,EAAOI,KACZC,KAAKL,EAAOM,KAAKD,KACjBE,KAAKP,EAAOQ,QAAQ,GAAGP,GACvBK,KAAKN,EAAOQ,QAAQ,GAAGF,KACvBG,YAAYT,EAAOQ,QAAQ,GAAGC,YAC9BC,IAAIV,EAAOE,MAAMQ,IACjBP,IAAIH,EAAOE,MAAMC,aAG5B,SACCQ,QAAQC,IAAI,qBACN,IAGF,kBAAC9B,EAAkB+B,SAAnB,CAA4BC,MAAO,CAAC3B,EAAMC,IACrCH,EAAM8B,WC9BNC,G,MAAgBjC,2BAEhBkC,EAAiB,SAAChC,GAAW,IAAD,EACPC,mBAAS,IADF,mBAC9BsB,EAD8B,KACrBU,EADqB,OAELhC,mBAAS,IAFJ,mBAE9BiC,EAF8B,KAEpBC,EAFoB,OAGblC,mBAAS,IAHI,mBAG9BmC,EAH8B,KAGxBC,EAHwB,OAIPpC,mBAAS,IAJF,mBAI9BqC,EAJ8B,KAIrBC,EAJqB,OAKbtC,mBAAS,IALI,mBAK9BuC,EAL8B,KAKxBC,EALwB,OAMbxC,mBAAS,IANI,mBAM9ByC,EAN8B,KAMxBC,EANwB,KAQrC,OACI,kBAACZ,EAAcH,SAAf,CAAwBC,MAAO,CAC3BA,MAAM,CAACN,EAAQU,GACfW,OAAO,CAACV,EAASC,GACjBU,OAAO,CAACT,EAAMC,GACdS,OAAO,CAACR,EAASC,GACjBQ,OAAO,CAACP,EAAKC,GACbO,OAAO,CAACN,EAAKC,KAEZ3C,EAAM8B,W,iCCoBJmB,EAvCF,SAACjD,GACZ,IAAIsB,EAAO,GACP4B,EAAUlD,EAAMsB,KACpB,QAAQ,GACN,KAAK4B,GAAW,KAAOA,GAAW,IAChC5B,EAAO,MACP,MACF,KAAK4B,GAAW,KAAOA,GAAW,IAChC5B,EAAO,MACP,MACF,KAAK4B,GAAW,KAAOA,GAAW,IAChC5B,EAAO,MACP,MACF,KAAK4B,GAAW,KAAOA,GAAW,IAChC5B,EAAO,MACP,MACF,KAAK4B,GAAW,KAAOA,GAAW,IAChC5B,EAAO,MACP,MACF,KAAiB,MAAZ4B,EACH5B,EAAO,MACP,MACF,KAAK4B,GAAW,KAAOA,GAAW,IAChC5B,EAAO,MACP,MACF,QACEA,EAAO,MAEX,OACE,6BACE,yBACE6B,IAAG,2CAAsC7B,EAAtC,WACH8B,IAAI,GACJC,UAAU,W,kECyEHC,EAhGGC,IAAMC,MAAK,SAACxD,GAAW,IAC/B+C,EAAWU,qBAAW1B,GAAtBgB,OAD8B,cAEdA,EAFc,GAEzBN,GAFyB,aAGdgB,qBAAW5D,GAHG,mBAG/BK,EAH+B,KAGzBC,EAHyB,OAIJF,oBAAS,GAJL,mBAIpByD,GAJoB,WAahCC,EAAY,uCAAG,sBAAAC,EAAA,0FAAH,qDAKlBlC,QAAQC,IAAI,OAAQzB,EAAK2D,QACzB,IAAMC,EACJ5D,EAAKO,KAAI,SAACC,GACT,OACG,yBAAKqD,IAAKrD,EAAEM,IACV,kBAAC,IAAD,CAAOgD,KAAM,KACb,kBAAC,IAAD,CAAOX,UAAU,GACfY,QAASN,EACTO,QACE,yBAAKb,UAAU,qBACb,6BACG3C,EAAES,KADL,IACYgD,KAAKC,MAAM1D,EAAEU,KAAO,QADhC,SAC2C,kBAAC,EAAD,CAAME,KAAMZ,EAAEY,OAAS,IAChE,4BACE+C,KAAK,SACLhB,UAAU,uBACVxB,MAAOnB,EAAES,KACT8C,QAAS,kBA5Bf,SAACK,GACX,IAAMlD,EAAI,YAAOlB,GACXiB,EAAOC,EAAKkD,GAAKnD,KACvBC,EAAKmD,OAAOD,EAAK,GACjBnE,EAAQiB,GACRf,aAAamE,WAAb,UAA2BrD,IAuBIsD,CAAIvE,EAAKwE,QAAQhE,MAEhC,kBAAC,IAAD,MANF,aAWNiE,SAAS,eAET,kBAAC,IAAKC,OAAN,KAAa,8BAAM,4BAAKlE,EAAES,MAAb,IAAwB,6BACrC,kBAAC,IAAD,CAAM0D,GAAE,gBAAWnE,EAAES,OACrB,4BAAQkC,UAAU,kBAAkBY,QAAS,kBA/BpC,SAACvD,GAClBgD,GAAa,GACbjB,EAAQ/B,GA6BkDoE,CAAWpE,EAAES,QAA/D,aAGyB,oBAAjBT,EAAEc,YACR,kBAAC,IAAKuD,KAAN,KACA,yBAAK/D,GAAIN,EAAEsE,OAAQjB,IAAKrD,EAAES,MAC1B,yBACE4C,IAAKrD,EAAEsE,OACPnD,MAAOnB,EAAEsE,OACTC,MAAO,CAAEC,gBAAgB,OAAD,OAASlF,EAAMoC,KAAf,OAExB,6BACA,kBAAC,IAAK+C,MAAN,uBAEA,kBAAC,IAAKC,KAAN,KACC1E,EAAEW,KAEH,6BACA,6BAJA,yBAMWX,EAAEQ,IAAI,6BANjB,cAOYR,EAAEe,IAAI,iCAMpB,SAOZ,OACE,6BACGvB,EAAK2D,QAAU,EACd,yBAAKR,UAAU,cACf,8CACA,yBAAKA,UAAU,UACb,kBAAC,IAAD,CAAkB4B,MAAO,CAAEI,MAAO,IAAKC,OAAQ,MAC5CxB,KAIJ,O,iCCzEMyB,EA3BM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,GAAgB,OAAZA,EACA,OAAO,KAGX,OACI,yBAAKnC,UAAWmC,EAAQnB,MAClBmB,EAAQrE,KACV,yBAAKkC,UAAU,UACX,yBAAKA,UAAU,gBAAf,uBAEA,yBAAKA,UAAU,WACVmC,EAAQC,QACT,0BAAMpC,UAAU,YACVmC,EAAQrE,MACNqE,EAAQE,SAChB,0BAAMrC,UAAU,QACgB,oBAApBmC,EAAQG,SAAyB,uBAAGC,KAbtD,sGAaiEC,OAAO,SAASC,IAAI,uBAAlC,cAAyE,IAErHN,EAAQG,WAGf,K,cCfRI,EACQ,mCADRA,EAEK,kDAFLA,EAGM,mDA6HGC,EA1HA,SAAChG,GAAW,IAClBiG,EAAYC,cAAZD,SADiB,EAEwBxC,qBAAW1B,GAApDF,EAFiB,EAEjBA,MAAOe,EAFU,EAEVA,OAAQC,EAFE,EAEFA,OAAQC,EAFN,EAEMA,OAAQC,EAFd,EAEcA,OAFd,cAGMlB,EAHN,GAGRI,GAHQ,yBAIQW,EAJR,GAIPT,GAJO,yBAKAU,EALA,GAKXR,GALW,yBAMMS,EANN,GAMjBR,EANiB,KAMRC,EANQ,KAOjBC,EAPiB,YAOTO,EAPS,QAQgB9C,mBAAS,IARzB,mBAQjBkG,EARiB,KAQHC,EARG,KAUlBC,EAASC,YAAU,CAACC,QAAS,EAAGC,KAAM,CAACD,QAAS,KAClD7F,EAAIuF,EAEFQ,EAAM,uCAAG,WAAO/F,GAAP,eAAAkD,EAAA,yDAEL,IAALlD,EAFU,wBAGPgG,EAAM,GAHC,kBAML/F,MAAM,GAAD,OAAIoF,EAAJ,cAAqBrF,EAArB,kBAAgCqF,IACxCnF,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLkB,EAAWlB,GACX2F,EAAM3F,EAAO4F,IAAIC,WAVV,uBAaLjG,MAAM,GAAD,OAAIoF,EAAJ,cAAsBrF,EAAtB,kBAAiCqF,IACzCnF,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAELoB,EAAYpB,MAjBL,uBAoBLJ,MAAM,0CAAD,OAA2C+F,IACnD9F,MAAK,SAAAiG,GAAQ,OAAIA,EAAS/F,UAC1BF,KAFG,uCAEE,WAAMG,GAAN,SAAA6C,EAAA,sDACJvB,EAAQtB,GADJ,2CAFF,uDApBK,OA0BXwB,EAAW,IA1BA,kDA4BX6D,EAAgB,CACdX,QAAS,mBACTtE,KAAMT,EACNgF,SAAS,2EACTC,SAAS,uBACTtB,KAAM,UAEVyC,YAAW,WACPV,EAAgB,QACjB,KArCU,0DAAH,sDAyCNW,EAAY,uCAAG,WAAOrG,GAAP,eAAAkD,EAAA,sDACfoD,EAAQtG,EAAEuG,MAAM,KAAK,GACzBR,EAAOO,GACPtF,QAAQC,IAAIqF,GAHO,2CAAH,sDAapB,OARE1G,qBAAU,WAER,GAAe,oBADfI,EAAIV,EAAMkH,MACiB,CAC3B,IAAIF,EAAQtG,EAAEuG,MAAM,KAAK,GACzBR,EAAOO,MAEN,CAACxE,IAGJ,yBAAKa,UAAU,IACb,kBAAC,IAAD,CACYxB,MAAOS,EACP6E,SAAU5E,EACV0B,QAAS8C,EACTK,SAAUL,EACVM,uBAAwB/E,EAAQuB,QAAU,EAC1CyD,0BAA0B,IAEzB,gBACCC,EADD,EACCA,cACAC,EAFD,EAECA,YACAC,EAHD,EAGCA,uBAHD,OAKC,yBAAKpE,UAAU,eACb,2CACMkE,EAAc,CAAEG,YAAY,qBADlC,CAEErE,UAAU,kBAEZ,kBAAC,IAAD,CAAiB/B,KAAMqG,IAAUC,MAAM,UACvC,kBAAC,IAASC,IAAV,CAAc5C,MAAOoB,GACrB,yBAAKhD,UAAU,eACZmE,EAAY/G,KAAI,SAACqH,GAChB,OACE,yBAAK/D,IAAM+D,EAAWtG,YAAa6B,UAAU,gBAC3C,wBACIoE,EAAuBK,GAE3B,wBAAIzE,UAAU,IACZ,wBAAKA,UAAU,YACb,yBAAMA,UAAU,cAGd,yBAAKA,UAAU,cACf,kBAAC,IAAD,CAAMwB,GAAE,gBAAWiD,EAAWtG,YAAYyF,MAAM,KAAK,KACrD,0BAAM5D,UAAU,aAAayE,EAAWtG,6BAepE,kBAAC,EAAD,CAAcgE,QAASW,MChGZ4B,EAlCD,WACZ,IADkB,EAEO9H,mBAAS,IAAI+H,MAFpB,mBAEXC,EAFW,KAEJtF,EAFI,KAIlBrC,qBAAU,WACN,IAAM4H,EAAQC,aAAY,WAE1BxF,EAAQ,IAAIqF,QACX,KACH,OAAO,WACLI,cAAcF,MAEf,IAEH,IAAMG,EAAMJ,EAAMK,mBAbH,KAa8B,CAAEC,QAAS,SAClD7F,EAAI,UAAM2F,EAAN,aAAcJ,EAAMO,UAApB,YAAiCP,EAAMK,mBAdlC,KAc6D,CAAEG,MAAO,SAA3E,QAEJC,EAAOT,EAAMU,WACbC,EAAI,gBAAYF,EAAO,GAAM,UAAeA,EAAO,IAAM,cAAgB,UAArE,KAEJG,EAAOZ,EAAMa,mBAnBJ,KAmB+B,CAAEJ,KAAM,UAAWK,QAAQ,EAAMC,OAAQ,YACvF,OAEE,yBAAK3F,UAAU,YACb,yBAAKA,UAAU,QAAQX,GACvB,yBAAKW,UAAU,QAAQwF,GACvB,yBAAKxF,UAAU,QAAQuF,GACvB,kBAAC,IAAD,CAAM/D,GAAE,KACR,yBAAKxB,UAAU,QAAf,W,QCGO4F,EA9BF,WACT,OACI,yBAAK5F,UAAU,aACT,yBAAKrC,GAAG,QAAQqC,UAAU,QACxB,uBAAGuC,KAAK,kCAAkCC,OAAO,UAC7C,yBAAKxC,UAAU,UACX,yBAAKrC,GAAG,WAAWmC,IAAI,4CAG/B,yBAAKE,UAAU,WACb,0CACA,uBAAGA,UAAU,aAAb,kGAGA,6CACA,yBAAKA,UAAU,+BACb,uBAAGuC,KAAK,oDAAoDC,OAAO,UACjE,kBAAC,IAAD,CAAiBqD,KAAK,KAAK5H,KAAO6H,OAFtC,gEAIE,uBAAGvD,KAAK,+FAA+FC,OAAO,UAC5G,kBAAC,IAAD,CAAiBqD,KAAK,KAAK5H,KAAO8H,YCazCC,MA7Bf,WAAmB,IAKTtG,EAAUU,qBAAW1B,GAArBgB,OACDP,EANU,YAMFO,EANE,MAQXsD,EAASC,YAAU,CAACC,QAAS,EAAGC,KAAM,CAACD,QAAS,GAAG+C,WAAY,OAEnE,OACE,yBAAKjG,UAAU,OAEf,kBAAC,EAAD,MACA,8BACI,6BAEE,kBAAC,EAAD,CAAQ6D,KAAM1E,KAGd,kBAAC,EAAD,MACA,kBAAC,IAASqF,IAAV,CAAc5C,MAAOoB,GAEnB,kBAAC,EAAD,UCiCCkD,EA5DC,SAACvJ,GACf,IAAMqG,EAASC,YAAU,CAACC,QAAS,EAAGC,KAAM,CAACD,QAAS,GAAG+C,WAAY,OACjE/H,EAAUvB,EAAMuB,QAChBa,EAAOpC,EAAMoC,KACbF,EAAWlC,EAAMkC,SACjB9B,EAAQ,GACZ,GAA2B,oBAAjB8B,EAAS4B,KACjB,IAAI,IAAI0F,EAAI,EAAGA,EAAI,GAAKA,IAAI,CAC1B,IAAIX,EAAO3G,EAAS4B,KAAK0F,GAAGC,OAC5BrJ,EAAMsJ,KACJ,yBAAKrG,UAAU,SAASU,IAAK7B,EAAS4B,KAAK0F,GAAGG,IAC5C,yBAAKtG,UAAU,UACb,yBAAKA,UAAU,YACZwF,EAAKe,MAAM,EAAE,IADhB,OAGM,yBAAKvG,UAAU,YAAf,KAA6Bc,KAAKC,MAAMlC,EAAS4B,KAAK0F,GAAGnI,KAAKD,KAAO,QAArE,SAHN,OAKGyH,EAAKe,MAAM,GAAG,QAO3B,OACE,kBAAC,IAAS/B,IAAV,CAAc5C,MAAOoB,GACrB,yBAAKhD,UAAU,qBACb,yBAAKF,IAAKf,EAAKA,KAAMgB,IAAI,OAAOC,UAAU,kBAD5C,IAC+D,6BAC7D,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBAAqC,oBAATrD,EAAuB,kBAAC,EAAD,CAAMsB,KAAMC,EAAQA,QAAQ,GAAGP,KAAU,GAA3G,MACGmD,KAAKC,MAAM7C,EAAQF,KAAKD,KAAO,QAFpC,UAKF,yBAAKiC,UAAU,YACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qBAAqB9B,EAAQJ,KAA5C,KAAoDI,EAAQoF,IAAIC,SAC9D,6BACF,yBAAKvD,UAAU,wBAAwBjB,EAAKyH,WAA5C,MAA2DzH,EAAKjB,OAElE,6BACE,yBAAKkC,UAAU,WACb,yBAAKA,UAAU,iBAAf,aAA0CjB,EAAK0H,SAC/C,yBAAKzG,UAAU,iBAAf,YAAyCjB,EAAK2H,QAC9C,yBAAK1G,UAAU,iBAAf,cAA2C9B,EAAQF,KAAK2I,SAAxD,KACA,yBAAK3G,UAAU,iBAAf,UAAuC9B,EAAQ0I,KAAKC,MAApD,QACA,yBAAK7G,UAAU,iBAAf,cAA2C9B,EAAQF,KAAK8I,SAAxD,QACA,yBAAK9G,UAAU,iBAAf,gBAA6C9B,EAAQA,QAAQ,GAAGC,eAGpE,yBAAK6B,UAAU,iBACf,kBAAC,IAAD,CAAkB4B,MAAO,CAAEI,MAAO,IAAKC,OAAQ,MAC5ClF,QCbIgK,EAxCE7G,IAAMC,MAAK,SAACxD,GAC3B,IAAMqG,EAASC,YAAU,CAACC,QAAS,EAAGC,KAAM,CAACD,QAAS,GAAG+C,WAAY,OACjEe,EAAa,CACf,SACA,SACA,UACA,YACA,WACA,SACA,YAEIjK,EAAQ,GACd,GAA8B,oBAAnBJ,EAAMsK,KAAKxG,KACpB,IAAK,IAAI0F,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,IAAI9G,EAAO1C,EAAMsK,KAAKxG,KAAK0F,GAAGC,OAAOc,UAAU,EAAG,IAE9CC,EAAUH,EADN,IAAIrC,KAAKtF,GACU+H,UAC3BrK,EAAMsJ,KACJ,yBAAKrG,UAAU,eAAeU,IAAKyF,GACjC,6BACE,4BAAKgB,GAEL,yBAAKnH,UAAU,IACZc,KAAKC,MAAMpE,EAAMsK,KAAKxG,KAAK0F,GAAGnI,KAAKD,KAAO,QAD7C,QACwD,KAExD,kBAAC,EAAD,CAAME,KAAMtB,EAAMsK,KAAKxG,KAAK0F,GAAGjI,QAAQ,GAAGP,KAC1C,4BAAKhB,EAAMsK,KAAKxG,KAAK0F,GAAGC,OAAOc,UAAU,EAAG,QAMtD,OACA,6BACE,kBAAC,IAAS1C,IAAV,CAAc5C,MAAOoB,GACpBjG,O,gBCUUsK,EAzCI,SAAC1K,GAChB,IAAMqG,EAASC,YAAU,CAACC,QAAS,EAAGC,KAAM,CAACD,QAAS,GAAG+C,WAAY,OAD3C,EAEH7F,qBAAW5D,GAFR,mBAEdM,GAFc,WAGpBoB,EAAUvB,EAAMA,MAChBI,EAAK,eAAOC,cACdiK,EAAO,GACX/J,OAAOC,KAAKJ,GAAOK,KAAI,SAACC,GAEpB,OADA4J,EAAKZ,KAAKhJ,GACH,KAcX,OACI,kBAAC,IAASmH,IAAV,CAAc5C,MAAOoB,GACrB,6BACMiE,EAAKK,SAASpJ,EAAQJ,MAIlB,KAHF,4BAAQU,MAAO7B,EAAMmB,KAAMkD,KAAK,SAAUhB,UAAU,wBAAwBY,QAhB5E,SAACvD,GACTA,EAAEkK,iBACMN,EAAKK,SAASpJ,EAAQJ,QACtBhB,GAAQ,SAAA0K,GAAI,4BAAQA,GAAR,CAAc,CACtB7J,GAAGO,EAAQN,MAAMC,IACjBC,KAAKI,EAAQJ,KACbC,KAAKG,EAAQF,KAAKD,KAClBE,KAAKC,EAAQA,QAAQ,GAAGP,SAE5BX,aAAayK,QAAb,UAAwBvJ,EAAQJ,MAAQ4J,KAAKC,UAAUzJ,EAAQJ,UAQ3D,kBAAC,IAAD,MADJ,QAC4BI,EAAQJ,KADpC,kBAKH,IAAK,IAAK,IACX,kBAAC,kBAAD,CAAiB8J,KAAMC,OAAOC,SAASvF,MACvC,4BAAQvB,KAAK,SAAShB,UAAU,gCAC1B,kBAAC,IAAD,CAAYA,UAAU,KAD5B,SACwC9B,EAAQJ,KADhD,gBCQGiK,MAtCf,WACI,IAAMnF,EAAWC,cADF,EAEiCzC,qBAAW1B,GAApDF,EAFQ,EAERA,MAAOe,EAFC,EAEDA,OAAQC,EAFP,EAEOA,OAAQE,EAFf,EAEeA,OAAQC,EAFvB,EAEuBA,OAC/BzB,EAHQ,YAGGM,EAHH,MAIRK,EAJQ,YAIIU,EAJJ,MAKRR,EALQ,YAKAS,EALA,oBAMSE,EANT,GAMRP,EANQ,KAMFC,EANE,KAORC,EAPQ,YAOAM,EAPA,MAWf,OAHA1C,qBAAU,WACPmC,EAAQwD,EAASA,YACjB,CAACA,IAEA,yBAAK5C,UAAU,OACf,kBAAC,EAAD,MACI,8BACA,6BACA,kBAAC,EAAD,CAAQ6D,KAAM1E,KAGN,yBAAKa,UAAU,YACS,oBAAhB9B,EAAQF,KAChB,yBAAKgC,UAAU,IACX,yBAAKA,UAAU,SACf,kBAAC,EAAD,CAAarD,MAAOuB,IAAU,8BAE9B,yBAAK8B,UAAU,SACf,kBAAC,EAAD,CAAS9B,QAASA,EAASa,KAAMA,EAAMM,KAAMA,EAAMR,SAAUA,IAAY,8BAEzE,kBAAC,EAAD,CAAUoI,KAAMpI,KAGpB,IAGA,kBAAC,EAAD,SCtBLmJ,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACA,kBAAC,IAAD,CAAQC,SAAUC,eAClB,6BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrC,IACjC,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAI,kBAAqBC,UAAWN,SCP3DO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c9bf09a6.chunk.js","sourcesContent":["import React , {useState, useEffect, createContext} from 'react'\r\n\r\nexport const FavouritesContext = createContext()\r\n\r\nexport const FavouritesProvider = (props) => {\r\n  const [fave , setFave] = useState([])\r\n  const items = {...localStorage}\r\n \r\n  useEffect(() => {\r\n    \r\n    Object.keys(items).map((e) => {\r\n      try {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=cbf3e6bbd09a990359dddac086ea6fb0`)\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            setFave(fave =>[ ...fave, {\r\n              id:result.coord.lat,\r\n              name:result.name,\r\n              temp:result.main.temp,\r\n              icon:result.weather[0].id,\r\n              main:result.weather[0].main,\r\n              description:result.weather[0].description,\r\n              lon:result.coord.lon,\r\n              lat:result.coord.lat\r\n            }])  \r\n    })\r\n  }catch{\r\n    console.log(\"not working\")\r\n    }})}, [])\r\n   \r\n    return(\r\n        <FavouritesContext.Provider value={[fave, setFave]}>\r\n            {props.children}\r\n        </FavouritesContext.Provider>\r\n    )\r\n}","import React , {useState, createContext} from 'react'\r\n\r\nexport const SearchContext = createContext()\r\n\r\nexport const SearchProvider = (props) => {\r\n    const [weather, setWeather] = useState({});\r\n    const [forecast, setForecast] = useState({});\r\n    const [flag, setFlag] = useState({});\r\n    const [address, setAddress] = useState(\"\");\r\n    const [view, setView] = useState(\"\")\r\n    const [date, setDate] = useState(\"\")\r\n\r\n    return(\r\n        <SearchContext.Provider value={{\r\n            value:[weather,setWeather],\r\n            value2:[forecast,setForecast],\r\n            value3:[flag, setFlag],\r\n            value4:[address, setAddress],\r\n            value5:[view,setView],\r\n            value6:[date,setDate]\r\n            }}>\r\n            {props.children}\r\n        </SearchContext.Provider>\r\n    )\r\n}","import React from \"react\";\r\n\r\nconst Icon = (props) => {\r\n  let icon = \"\";\r\n  let rangeId = props.icon;\r\n  switch (true) {\r\n    case rangeId >= 200 && rangeId <= 232:\r\n      icon = \"11d\";\r\n      break;\r\n    case rangeId >= 300 && rangeId <= 321:\r\n      icon = \"09d\";\r\n      break;\r\n    case rangeId >= 500 && rangeId <= 531:\r\n      icon = \"10d\";\r\n      break;\r\n    case rangeId >= 600 && rangeId <= 622:\r\n      icon = \"13d\";\r\n      break;\r\n    case rangeId >= 701 && rangeId <= 781:\r\n      icon = \"50d\";\r\n      break;\r\n    case rangeId === 800:\r\n      icon = \"01d\";\r\n      break;\r\n    case rangeId >= 801 && rangeId <= 804:\r\n      icon = \"03d\";\r\n      break;\r\n    default:\r\n      icon = \"03d\";\r\n  }\r\n  return (\r\n    <div>\r\n      <img\r\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        alt=\"\"\r\n        className=\"icon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icon;","import React, { useState,useContext } from \"react\";\r\nimport { BsFillStarFill } from \"react-icons/bs\";\r\nimport Icon from \"./Icons.Componet\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport Delay from 'react-delay'\r\nimport {FavouritesContext} from '../Context/FavouritesContext'\r\nimport {SearchContext} from '../Context/SearchContext'\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Favourite = React.memo((props) => {\r\n  const { value5 } = useContext(SearchContext)\r\n  const [view, setView] = value5\r\n  const [fave, setFave] = useContext(FavouritesContext)\r\n  const [showModel, setShowModel] = useState(false)\r\n  \r\n  const del = (idx) => {\r\n    const temp = [...fave]\r\n    const name = temp[idx].name \r\n    temp.splice(idx, 1)\r\n    setFave(temp)\r\n    localStorage.removeItem(`${name}`);\r\n  };\r\n  const handleChange = async () => {};\r\n  const handleView = (e) => {\r\n    setShowModel(true)\r\n    setView(e)\r\n  }\r\n  console.log('fave', fave.length)\r\n  const list =   \r\n    fave.map((e) => {\r\n     return(\r\n        <div key={e.id}>\r\n          <Delay wait={100} >\r\n          <Popup className=\"\"\r\n            onClick={handleChange}\r\n            trigger={\r\n              <div className=\"scrollbar element\">\r\n                <div>\r\n                  {e.name} {Math.round(e.temp - 273.15)}°C <Icon icon={e.icon} />{\" \"}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning star\"\r\n                    value={e.name}\r\n                    onClick={() => del(fave.indexOf(e))}\r\n                  >\r\n                    <BsFillStarFill /> Remove\r\n                  </button>  \r\n                </div>\r\n              </div>\r\n            }\r\n            position=\"left center\"\r\n          >\r\n            <Card.Header><nobr><h4>{e.name}</h4> <div>\r\n            <Link to={`/city/${e.name}`}>\r\n            <button className=\"btn btn-success\" onClick={()=> handleView(e.name)}> View</button>\r\n            </Link>\r\n            </div></nobr></Card.Header>\r\n            {typeof e.description != \"undefined\" ? (\r\n              <Card.Body>\r\n              <div id={e.iconId} key={e.name}>\r\n              <div\r\n                key={e.iconId}\r\n                value={e.iconId}\r\n                style={{ backgroundImage: `url(${props.flag})` }}\r\n              >\r\n                <div>\r\n                <Card.Title> Description </Card.Title>\r\n                </div>\r\n                <Card.Text>\r\n                {e.main}\r\n                \r\n                <br />\r\n                <br />\r\n                Coordinates\r\n                Latitude: {e.lat}<br />\r\n                Longitude: {e.lon}<br />\r\n                </Card.Text>\r\n              </div>\r\n            </div>\r\n            </Card.Body>\r\n            ): (\r\n              \"\"\r\n            )}\r\n          </Popup>\r\n          </Delay>\r\n        </div>\r\n     )\r\n    })\r\n  return (\r\n    <div>\r\n      {fave.length >= 1 ?(\r\n        <div className=\" favourite\">\r\n        <div > Favourites! </div>\r\n        <div className=\"scroll\">\r\n          <PerfectScrollbar style={{ width: 200, height: 570 }}>\r\n            {list}\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n      ): \"\"}\r\n      \r\n    </div>\r\n  );\r\n})\r\n\r\nexport default Favourite;","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    let url = 'https://en.wikipedia.org/wiki/List_of_towns_and_cities_with_100,000_or_more_inhabitants/cityname:_A'\r\n    return (\r\n        <div className={message.type}>\r\n            { message.name ?(\r\n            <div className=\"Notifi\">  \r\n                <div className=\"NotifiHeader\"> &nbsp;  Notification\r\n                </div>  \r\n                <div className=\"message\">\r\n                    {message.content}\r\n                    <nobr className=\"cityName\">\r\n                         {message.name} \r\n                    </nobr>{message.content2} \r\n                    <nobr className=\"wiki\">\r\n                        {typeof message.content3 != 'undefined' ?<a href={url} target=\"_blank\" rel=\"noopener noreferrer\"> Wikipedia</a> : ''}\r\n                    </nobr>\r\n                    {message.content3}\r\n                </div> \r\n            </div>\r\n            ):''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect,useContext} from 'react'\r\nimport {SearchContext} from '../Context/SearchContext'\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Notification from \"../notification/Notification\"\r\nimport {useSpring, animated} from 'react-spring'\r\nimport {useParams, Link} from 'react-router-dom'\r\n\r\nconst api = {\r\n  keyWeather: \"cbf3e6bbd09a990359dddac086ea6fb0\",\r\n  weather: \"https://api.openweathermap.org/data/2.5/weather\",\r\n  forecast: \"https://api.openweathermap.org/data/2.5/forecast\",\r\n};\r\n\r\nconst Search = (props) => {\r\n  const {cityname} = useParams()\r\n  const {value, value2, value3, value4, value5} = useContext(SearchContext)\r\n  const [weather, setWeather] = value\r\n  const [forecast, setForecast] = value2\r\n  const [flag, setFlag] = value3\r\n  const [address, setAddress] = value4\r\n  const [view] = value5\r\n  const [notification, setNotification] = useState('')\r\n \r\n  const iconan = useSpring({opacity: 1, from: {opacity: 0}})\r\n  let e = cityname\r\n  // take first word from cities\r\n  const search = async (e) => {\r\n\r\n    if(e != ''){\r\n      let dir = \"\";\r\n    try {\r\n      // fetch weather api\r\n      await fetch(`${api.weather}?q=${e}&appid=${api.keyWeather}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          dir = result.sys.country;\r\n        });\r\n      // fetch forecast api\r\n      await fetch(`${api.forecast}?q=${e}&appid=${api.keyWeather}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          // console.log(result)\r\n          setForecast(result);\r\n        });\r\n      // fetch cities' data to display flag and countries' information\r\n      await fetch(`https://restcountries.eu/rest/v2/alpha/${dir}`)\r\n        .then(response => response.json())\r\n        .then(async(result) => {\r\n          setFlag(result);\r\n        });\r\n        \r\n      setAddress(\"\");\r\n    } catch (error) {\r\n      setNotification({\r\n        content: 'The city name \" ',\r\n        name: e,\r\n        content2:' \" does not match any city name. If you are not confident you can check ',\r\n        content3:' list for all cities',\r\n        type: 'Error'\r\n    })\r\n    setTimeout(() => {\r\n        setNotification(null)\r\n    }, 5000)\r\n    } }\r\n    }\r\n    \r\n  const handleSelect = async (e) => {\r\n    let regix = e.split(\",\")[0];\r\n    search(regix);\r\n    console.log(regix)\r\n  };\r\n  useEffect(() => {\r\n    e = props.city\r\n    if(typeof e != 'undefined'){\r\n    let regix = e.split(\",\")[0];\r\n    search(regix);\r\n    }\r\n  }, [view])\r\n  \r\nreturn( \r\n  <div className=\"\"> \r\n    <PlacesAutocomplete\r\n                value={address}\r\n                onChange={setAddress}\r\n                onClick={handleSelect}\r\n                onSelect={handleSelect}\r\n                shouldFetchSuggestions={address.length >= 2}\r\n                highlightFirstSuggestion={true}\r\n              >\r\n                {({\r\n                  getInputProps,\r\n                  suggestions,\r\n                  getSuggestionItemProps,\r\n                }) => (\r\n                  <div className=\"HeadSearech\">\r\n                    <input\r\n                      {...getInputProps({ placeholder: `Search Places...` })}\r\n                      className=\"input-search\"\r\n                    />\r\n                    <FontAwesomeIcon icon={faSearch} color=\"white\" />\r\n                    <animated.div style={iconan}>\r\n                    <div className=\"search-list\" >\r\n                      {suggestions.map((suggestion) => {\r\n                        return (\r\n                          <div key ={suggestion.description} className=\"search-items\">\r\n                            <div \r\n                            {...getSuggestionItemProps(suggestion)}\r\n                          >\r\n                            <ul className=\"\">\r\n                              <li  className=\"suggeste\">\r\n                                <div  className=\"suggesteCh\">\r\n                                  {/* <div className=\"searchIcon\"></div> */}\r\n                                  {/* <i className=\"material-icons\">location_on</i> */}\r\n                                  <div className=\"searchItem\">\r\n                                  <Link to={`/city/${suggestion.description.split(\",\")[0]}`}>\r\n                                  <span className=\"searchRes\">{suggestion.description}</span>\r\n                                  </ Link>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          </div> \r\n                        );\r\n                      })}\r\n                    </div>\r\n                    </animated.div>\r\n                  </div>\r\n                )}\r\n      </PlacesAutocomplete>\r\n      <Notification message={notification} />\r\n    </div>\r\n  )\r\n}\r\nexport default Search","import React, {useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UseDate = () => {\r\n    const locale = 'en';\r\n    const [today, setDate] = useState(new Date()); \r\n    \r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n      \r\n        setDate(new Date());\r\n      }, 60 * 1000);\r\n      return () => {\r\n        clearInterval(timer);\r\n      }\r\n    }, []);\r\n  \r\n    const day = today.toLocaleDateString(locale, { weekday: 'long' });\r\n    const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, { month: 'long' })}\\n\\n`;\r\n  \r\n    const hour = today.getHours();\r\n    const wish = `Good ${(hour < 12 && 'Morning') || (hour < 17 && 'Afternoon') || 'Evening'} `;\r\n  \r\n    const time = today.toLocaleTimeString(locale, { hour: 'numeric', hour12: true, minute: 'numeric' });\r\n    return(\r\n      \r\n      <div className=\"dateTime\">\r\n        <div className=\"date\">{date}</div>\r\n        <div className=\"time\">{time}</div>\r\n        <div className=\"wish\">{wish}</div>\r\n        <Link to={`/`}>\r\n        <div className=\"home\">Home</div>\r\n        </Link>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  export default UseDate","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faFile } from '@fortawesome/free-solid-svg-icons'\r\nconst Card = () => {\r\n    return(\r\n        <div className=\"page-wrap\">\r\n              <div id=\"card1\" className=\"card\">\r\n                <a href=\"https://www.jamk.fi/fi/Etusivu/\" target=\"_blank\">\r\n                    <div className=\"center\">\r\n                        <img id=\"headshot\" src=\"https://i.ibb.co/8NQVBt3/cXoB6y6n.png\" />\r\n                    </div>\r\n                </a>\r\n                <div className=\"content\">\r\n                  <h1>WeatherApp</h1>\r\n                  <p className=\"clickable\">\r\n                  This is was made as assignment for YTSP0300 - Application Frameworks course by Bassam AlAsadi.\r\n                  </p> \r\n                  <h3>Documentation</h3>\r\n                  <div className=\"icon-block center clickable\">\r\n                    <a href=\"//github.com/bassamalasadi/weatherapp/tree/master\" target=\"_blank\">\r\n                      <FontAwesomeIcon size='3x' icon={ faGithub} />\r\n                    </a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <a href=\"//github.com/bassamalasadi/weatherapp/blob/master/Bassam_Alasadi_stack_research_YTSP0300.pdf\" target=\"_blank\">\r\n                      <FontAwesomeIcon size='3x' icon={ faFile } />\r\n                      \r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>  \r\n    )\r\n}\r\n\r\nexport default Card","import React,{useContext} from 'react'\r\nimport {SearchContext} from \"../Context/SearchContext\"\r\nimport Favourite from \"../components/Favourites.Component\";\r\nimport Search from \"../components/Search.Component\"\r\nimport {useSpring, animated} from 'react-spring'\r\nimport UseDate from '../components/timeDate';\r\nimport Card from '../components/Card.Component'\r\n\r\nfunction HomePage(){\r\n  /*\r\n  Use the view state as a parameter to pass city name from the \r\n  view botton in favourites component to Search-bar in HomePage  \r\n  */\r\n  const { value5} = useContext(SearchContext)\r\n  const [view] = value5\r\n  // iconan used to make some delay in display components\r\n  const iconan = useSpring({opacity: 1, from: {opacity: 0},transition: '1s'})\r\n\r\n    return(  \r\n      <div className=\"App\"> \r\n      {/* Date and time component  */}\r\n      <UseDate />\r\n      <main>\r\n          <div>\r\n            {/* Search-bar component  */}\r\n            <Search city={view} />        \r\n          </div> \r\n            {/* Favourites component   */}\r\n            <Favourite/>\r\n            <animated.div style={iconan}>\r\n              {/* Documentation component  */}\r\n              <Card />\r\n            </animated.div>\r\n      </main>\r\n    </div>\r\n    )\r\n  }    \r\nexport default HomePage\r\n\r\n","import React from \"react\";\r\nimport Icon from \"./Icons.Componet\";\r\nimport {useSpring, animated} from 'react-spring'\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nconst Weather = (props) => {\r\n  const iconan = useSpring({opacity: 1, from: {opacity: 0},transition: '1s'})\r\n  let weather = props.weather\r\n  let flag = props.flag\r\n  let forecast = props.forecast\r\n  let items = []\r\n  if(typeof forecast.list != \"undefined\"){\r\n    for(let i = 0; i < 40 ; i++){\r\n      let time = forecast.list[i].dt_txt\r\n      items.push(\r\n        <div className=\"d-time\" key={forecast.list[i].dt}>\r\n          <div className=\"hourly\" >\r\n            <div className=\"hourly-t\">\r\n              {time.slice(0,10)} \r\n                &nbsp;\r\n                  <div className=\"hourly-w\">  {Math.round(forecast.list[i].main.temp - 273.15)}°C</div>\r\n                &nbsp;\r\n              {time.slice(11,16)}\r\n            </div>\r\n          </div>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <animated.div style={iconan}>\r\n    <div className=\"leftSideContainer\">\r\n      <img src={flag.flag} alt=\"flag\" className=\"countray-flag\" /> <br />        \r\n      <div className=\"degree\">\r\n        <div className=\"weather-flag-icon\">{typeof props != \"undefined\" ? <Icon icon={weather.weather[0].id}  /> : \"\"}  </div>\r\n          {Math.round(weather.main.temp - 273.15)}°C \r\n        </div>\r\n    </div> \r\n    <div className=\"info-box\" >\r\n      <div className=\"weather-container\">     \r\n        <div className=\"flag-box\">\r\n          <div className=\"weather-city-name\">{weather.name}, {weather.sys.country}</div> \r\n            <br />\r\n          <div className=\"weather-country-name\">{flag.nativeName} - {flag.name}</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"cap-box\">\r\n            <div className=\"weather-extra\">Capital : {flag.capital}</div>\r\n            <div className=\"weather-extra\">Region : {flag.region}</div>\r\n            <div className=\"weather-extra\">Humidity : {weather.main.humidity}%</div>\r\n            <div className=\"weather-extra\">Wind : {weather.wind.speed} m/s</div>\r\n            <div className=\"weather-extra\">Pressure : {weather.main.pressure} hPa</div>\r\n            <div className=\"weather-extra\">Description: {weather.weather[0].description}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"hourly-scroll\">\r\n        <PerfectScrollbar style={{ width: 270, height: 239 }}>\r\n          {items}\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div> \r\n    </div>\r\n    </animated.div>\r\n  );\r\n};\r\nexport default Weather;","import React from \"react\";\r\nimport Icon from \"./Icons.Componet\";\r\nimport {useSpring, animated} from 'react-spring'\r\nconst Forecast = React.memo((props) => {\r\n  const iconan = useSpring({opacity: 1, from: {opacity: 0},transition: '1s'})\r\n  let gsDayNames = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const items = [];\r\n  if (typeof props.data.list != \"undefined\") {\r\n    for (let i = 0; i < 39; i += 8) {\r\n      let date = props.data.list[i].dt_txt.substring(0, 10);\r\n      let d = new Date(date);\r\n      let dayName = gsDayNames[d.getDay()];\r\n      items.push(\r\n        <div className=\"forecast-box\" key={i}>\r\n          <div>\r\n            <h4>{dayName}</h4>\r\n            {/* <h6>{props.data.list[i].weather[0].description}</h6> */}\r\n            <div className=\"\">\r\n              {Math.round(props.data.list[i].main.temp - 273.15)}°C{\" \"}\r\n            </div>\r\n            <Icon icon={props.data.list[i].weather[0].id} />\r\n            <h6>{props.data.list[i].dt_txt.substring(0, 10)}</h6>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n  <div>\r\n    <animated.div style={iconan}>\r\n    {items}\r\n    </animated.div>\r\n  </div>);\r\n})\r\n\r\nexport default Forecast;","\r\nimport React, {useContext} from 'react'\r\nimport {FavouritesContext} from '../Context/FavouritesContext'\r\nimport { BsFillStarFill } from \"react-icons/bs\"\r\nimport { AiFillCopy } from \"react-icons/ai\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {useSpring, animated} from 'react-spring'\r\nconst AddandCopy = (props) => {\r\n    const iconan = useSpring({opacity: 1, from: {opacity: 0},transition: '1s'})\r\n    const [fave,setFave] = useContext(FavouritesContext);  \r\n    const weather = props.props\r\n    const items = {...localStorage}\r\n    let data = []\r\n    Object.keys(items).map((e) => { \r\n        data.push(e)\r\n        return 0\r\n    })\r\n    const add = (e) => {\r\n        e.preventDefault()\r\n            if(!data.includes(weather.name)){\r\n                setFave(prev =>[ ...prev, {\r\n                    id:weather.coord.lat,\r\n                    name:weather.name,\r\n                    temp:weather.main.temp,\r\n                    icon:weather.weather[0].id\r\n                  }]) \r\n                localStorage.setItem(`${weather.name}`, JSON.stringify(weather.name));\r\n            }\r\n    }\r\n    return (\r\n        <animated.div style={iconan}>\r\n        <div>  \r\n            {!data.includes(weather.name) ?\r\n                <button value={props.name} type=\"button\"  className=\"btn btn-warning buton\" onClick={add}>\r\n                    <BsFillStarFill /> Add {weather.name} to Favourites\r\n                </button>\r\n                : null\r\n            }\r\n            {\" \"}{\" \"}{\" \"}\r\n            <CopyToClipboard text={window.location.href}>\r\n            <button type=\"button\" className=\"btn btn-warning button buton\">\r\n                  <AiFillCopy className=\"\" /> Copy {weather.name} Weather\r\n            </button>\r\n            </CopyToClipboard>\r\n        </div> \r\n        </animated.div>\r\n    )\r\n}\r\nexport default AddandCopy","import React,{useContext, useEffect} from 'react'\r\nimport {SearchContext} from \"../Context/SearchContext\"\r\nimport Weather from \"../components/Weather.Component\";\r\nimport Forecast from \"../components/Forecast.Component\";\r\nimport AddandCopy from \"../components/AddAndCopy.Component\";\r\nimport Favourite from \"../components/Favourites.Component\";\r\nimport Search from \"../components/Search.Component\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport UseDate from '../components/timeDate';\r\n\r\nfunction CityPage(){\r\n    const cityname = useParams()\r\n    const {value, value2, value3, value5, value6} = useContext(SearchContext)\r\n    const [weather] = value\r\n    const [forecast] = value2\r\n    const [flag] = value3\r\n    const [view, setView] = value5\r\n    const [date] = value6\r\n    useEffect(() => {\r\n       setView(cityname.cityname)\r\n    }, [cityname])\r\n    return(    \r\n        <div className=\"App\">  \r\n        <UseDate />\r\n            <main>    \r\n            <div >\r\n            <Search city={view} />              \r\n            </div>      \r\n                    {/* display two button */}\r\n                    <div className=\"mainCard\">\r\n                    {typeof weather.main != \"undefined\" ? (\r\n                    <div className=\"\">\r\n                        <div className=\"cards\">\r\n                        <AddandCopy  props={weather}/><br />\r\n                        </div>\r\n                        <div className=\"cards\">\r\n                        <Weather weather={weather} flag={flag} date={date} forecast={forecast} /><br />\r\n                        </div>\r\n                        <Forecast data={forecast} />          \r\n                    </div>\r\n                    ) : (\r\n                    \"\"\r\n                    )}\r\n                    </div>\r\n                    <Favourite/>\r\n                </main>\r\n            </div>      \r\n    )}\r\nexport default CityPage","import React from 'react'\nimport {FavouritesProvider} from \"./Context/FavouritesContext\"\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport {SearchProvider} from \"./Context/SearchContext\"\nimport HomePage from \"./pages/HomePage\"\nimport CityPage from \"./pages/CityPage\"\nimport {HashRouter as Router,Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <FavouritesProvider>\n      <SearchProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n      <div>\n          <Route exact path='/' component={HomePage} /> \n          <Route exact path={`/city/:cityname`} component={CityPage} />\n      </div>\n      </Router>\n      </SearchProvider>\n    </FavouritesProvider>\n  );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}