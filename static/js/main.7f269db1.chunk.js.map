{"version":3,"sources":["Context/FavouritesContext.jsx","Context/SearchContext.jsx","components/Icons.Componet.jsx","components/Favourites.Component.jsx","notification/Notification.jsx","components/Search.Component.jsx","components/timeDate.jsx","components/Card.Component.jsx","pages/HomePage.jsx","components/Weather.Component.jsx","components/Forecast.Component.jsx","components/AddAndCopy.Component.jsx","pages/CityPage.jsx","App.js","index.js"],"names":["FavouritesContext","createContext","FavouritesProvider","props","useState","fave","setFave","items","localStorage","useEffect","Object","keys","map","e","fetch","then","res","json","result","id","coord","lat","name","temp","main","icon","weather","description","lon","console","log","Provider","value","children","SearchContext","SearchProvider","setWeather","forecast","setForecast","flag","setFlag","address","setAddress","view","setView","date","setDate","value2","value3","value4","value5","value6","Icon","rangeId","src","alt","className","Favourite","React","memo","useContext","list","key","wait","trigger","Math","round","type","onClick","idx","splice","removeItem","del","indexOf","position","Header","to","Body","iconId","style","backgroundImage","Title","Text","length","width","height","Notification","message","content","content2","content3","href","target","rel","api","Search","cityname","useParams","notification","setNotification","iconan","useSpring","opacity","from","search","a","flg","sys","country","response","setTimeout","handleSelect","regix","split","city","onChange","onSelect","shouldFetchSuggestions","highlightFirstSuggestion","getInputProps","suggestions","getSuggestionItemProps","placeholder","faSearch","color","div","suggestion","UseDate","Date","today","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","getDate","month","hour","getHours","wish","time","toLocaleTimeString","hour12","minute","Card","size","faGithub","faFile","HomePage","transition","Weather","i","dt_txt","push","dt","slice","nativeName","capital","region","humidity","wind","speed","pressure","Forecast","gsDayNames","data","substring","dayName","getDay","AddandCopy","includes","preventDefault","prev","setItem","JSON","stringify","text","window","location","CityPage","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f269db1.chunk.js","sourcesContent":["import React , {useState, useEffect, createContext} from 'react'\r\n\r\nexport const FavouritesContext = createContext()\r\n\r\nexport const FavouritesProvider = (props) => {\r\n  const [fave , setFave] = useState([])\r\n  const items = {...localStorage}\r\n \r\n  useEffect(() => {\r\n    \r\n    Object.keys(items).map((e) => {\r\n      try {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=cbf3e6bbd09a990359dddac086ea6fb0`)\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            setFave(fave =>[ ...fave, {\r\n              id:result.coord.lat,\r\n              name:result.name,\r\n              temp:result.main.temp,\r\n              icon:result.weather[0].id,\r\n              main:result.weather[0].main,\r\n              description:result.weather[0].description,\r\n              lon:result.coord.lon,\r\n              lat:result.coord.lat\r\n            }])  \r\n    })\r\n  }catch{\r\n    console.log(\"not working\")\r\n    }})}, [])\r\n   \r\n    return(\r\n        <FavouritesContext.Provider value={[fave, setFave]}>\r\n            {props.children}\r\n        </FavouritesContext.Provider>\r\n    )\r\n}","import React , {useState, createContext} from 'react'\r\n\r\nexport const SearchContext = createContext()\r\n\r\nexport const SearchProvider = (props) => {\r\n    const [weather, setWeather] = useState({});\r\n    const [forecast, setForecast] = useState({});\r\n    const [flag, setFlag] = useState({});\r\n    const [address, setAddress] = useState(\"\");\r\n    const [view, setView] = useState(\"\")\r\n    const [date, setDate] = useState(\"\")\r\n\r\n    return(\r\n        <SearchContext.Provider value={{\r\n            value:[weather,setWeather],\r\n            value2:[forecast,setForecast],\r\n            value3:[flag, setFlag],\r\n            value4:[address, setAddress],\r\n            value5:[view,setView],\r\n            value6:[date,setDate]\r\n            }}>\r\n            {props.children}\r\n        </SearchContext.Provider>\r\n    )\r\n}","// Set the weather Icon by comparing the Icon ID parameters provides from weather API\r\nimport React from \"react\";\r\n\r\nconst Icon = (props) => {\r\n  let icon = \"\";\r\n  let rangeId = props.icon;\r\n  switch (true) {\r\n    case rangeId >= 200 && rangeId <= 232:\r\n      icon = \"11d\";\r\n      break;\r\n    case rangeId >= 300 && rangeId <= 321:\r\n      icon = \"09d\";\r\n      break;\r\n    case rangeId >= 500 && rangeId <= 531:\r\n      icon = \"10d\";\r\n      break;\r\n    case rangeId >= 600 && rangeId <= 622:\r\n      icon = \"13d\";\r\n      break;\r\n    case rangeId >= 701 && rangeId <= 781:\r\n      icon = \"50d\";\r\n      break;\r\n    case rangeId === 800:\r\n      icon = \"01d\";\r\n      break;\r\n    case rangeId >= 801 && rangeId <= 804:\r\n      icon = \"03d\";\r\n      break;\r\n    default:\r\n      icon = \"03d\";\r\n  }\r\n  return (\r\n    <div>\r\n      <img\r\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        alt=\"\"\r\n        className=\"icon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icon;","// Display the Favourites list for all the cities \r\n\r\nimport React, {useContext } from \"react\";\r\nimport { BsFillStarFill } from \"react-icons/bs\";\r\nimport Icon from \"./Icons.Componet\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Delay from 'react-delay'\r\nimport {FavouritesContext} from '../Context/FavouritesContext'\r\nimport {SearchContext} from '../Context/SearchContext'\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport \"reactjs-popup/dist/index.css\";\r\n\r\nconst Favourite = React.memo((props) => {\r\n  // Use context API to share different states\r\n  const { value5 } = useContext(SearchContext)\r\n  // Use \"view\" state to make request to the Search component \r\n  const [view, setView] = value5\r\n  // Use \"fave\" state to update the virtual dom in React without need to \r\n  // render the page or to get the new item from local storage\r\n  const [fave, setFave] = useContext(FavouritesContext)\r\n  // Remove function to remove items from Favourites list and from local storage\r\n  const del = (idx) => {\r\n    // set all the favourite items \r\n    const temp = [...fave]\r\n    // Get the name of the targeted item\r\n    const name = temp[idx].name\r\n    // Remove the targeted item from the temp array \r\n    temp.splice(idx, 1)\r\n    // Set the new array in \"fave\" state\r\n    setFave(temp)\r\n    // Remove the item from locl storage\r\n    localStorage.removeItem(`${name}`);\r\n  };\r\n  // Define a variable to set all the items inside it for the rendering process\r\n  const list = \r\n    // Looping through the items  \r\n    fave.map((e) => {\r\n     return(\r\n        <div key={e.id}>\r\n          <Delay wait={100} >\r\n          <Popup \r\n            trigger={\r\n              <div className=\"scrollbar element\">\r\n                <div>\r\n                  {e.name} {Math.round(e.temp - 273.15)}°C <Icon icon={e.icon} />{\" \"}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning star\"\r\n                    value={e.name}\r\n                    onClick={() => del(fave.indexOf(e))}\r\n                  >\r\n                    <BsFillStarFill /> Remove\r\n                  </button>  \r\n                </div>\r\n              </div>\r\n            }\r\n            position=\"left center\"\r\n          >\r\n            <Card.Header><nobr><h4>{e.name}</h4> <div>\r\n            <Link to={`/city/${e.name}`}>\r\n            <button className=\"btn btn-success\" onClick={()=> setView(e.name)}> View</button>\r\n            </Link>\r\n            </div></nobr></Card.Header>\r\n            {typeof e.description != \"undefined\" ? (\r\n              <Card.Body>\r\n              <div id={e.iconId} key={e.name}>\r\n              <div\r\n                key={e.iconId}\r\n                value={e.iconId}\r\n                style={{ backgroundImage: `url(${props.flag})` }}\r\n              >\r\n                <div>\r\n                <Card.Title> Description </Card.Title>\r\n                </div>\r\n                <Card.Text>\r\n                {e.main}\r\n                \r\n                <br />\r\n                <br />\r\n                Coordinates\r\n                Latitude: {e.lat}<br />\r\n                Longitude: {e.lon}<br />\r\n                </Card.Text>\r\n              </div>\r\n            </div>\r\n            </Card.Body>\r\n            ): (\r\n              \"\"\r\n            )}\r\n          </Popup>\r\n          </Delay>\r\n        </div>\r\n     )\r\n    })\r\n  return (\r\n    <div>\r\n      {fave.length >= 1 ?(\r\n        <div className=\" favourite\">\r\n        <div > Favourites! </div>\r\n        <div className=\"scroll\">\r\n          <PerfectScrollbar style={{ width: 200, height: 570 }}>\r\n            {list}\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n      ): \"\"}\r\n      \r\n    </div>\r\n  );\r\n})\r\n\r\nexport default Favourite;","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    let url = 'https://en.wikipedia.org/wiki/List_of_towns_and_cities_with_100,000_or_more_inhabitants/cityname:_A'\r\n    return (\r\n        <div className={message.type}>\r\n            { message.name ?(\r\n            <div className=\"Notifi\">  \r\n                <div className=\"NotifiHeader\"> &nbsp;  Notification\r\n                </div>  \r\n                <div className=\"message\">\r\n                    {message.content}\r\n                    <nobr className=\"cityName\">\r\n                         {message.name} \r\n                    </nobr>{message.content2} \r\n                    <nobr className=\"wiki\">\r\n                        {typeof message.content3 != 'undefined' ?<a href={url} target=\"_blank\" rel=\"noopener noreferrer\"> Wikipedia</a> : ''}\r\n                    </nobr>\r\n                    {message.content3}\r\n                </div> \r\n            </div>\r\n            ):''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","// Search for a specific city \r\nimport React, {useState, useEffect,useContext} from 'react'\r\nimport {SearchContext} from '../Context/SearchContext'\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Notification from \"../notification/Notification\"\r\nimport {useSpring, animated} from 'react-spring'\r\nimport {useParams, Link} from 'react-router-dom'\r\n// Get your API's from \"https://openweathermap.org/\"\r\nconst api = {\r\n  keyWeather: \"cbf3e6bbd09a990359dddac086ea6fb0\",\r\n  weather: \"https://api.openweathermap.org/data/2.5/weather\",\r\n  forecast: \"https://api.openweathermap.org/data/2.5/forecast\",\r\n};\r\n\r\nconst Search = (props) => {\r\n  // To pass the name as a link to the URL route \r\n  const {cityname} = useParams()\r\n  // Pass different states from context API \"SearchContext\"\r\n  const {value, value2, value3, value4, value5} = useContext(SearchContext)\r\n  const [weather, setWeather] = value\r\n  const [forecast, setForecast] = value2\r\n  const [flag, setFlag] = value3\r\n  const [address, setAddress] = value4\r\n  const [view] = value5\r\n  // Set state for notification\r\n  const [notification, setNotification] = useState('')\r\n \r\n  const iconan = useSpring({opacity: 1, from: {opacity: 0}})\r\n  let e = cityname\r\n  // take first word from cities\r\n  const search = async (e) => {\r\n    // Check if the item value is not empty\r\n    if(e != ''){\r\n      // Define a variable to get the country name to fetch the country flag\r\n      let flg = \"\";\r\n      try {\r\n        // fetch weather api\r\n        await fetch(`${api.weather}?q=${e}&appid=${api.keyWeather}`)\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            setWeather(result);\r\n            // Get the country name\r\n            flg = result.sys.country;\r\n          });\r\n        // fetch forecast api\r\n        await fetch(`${api.forecast}?q=${e}&appid=${api.keyWeather}`)\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            setForecast(result);\r\n          });\r\n        // Fetch the city's data to display the flag and some information from \" https://restcountries.eu/ \"\r\n        await fetch(`https://restcountries.eu/rest/v2/alpha/${flg}`)\r\n          .then(response => response.json())\r\n          .then(async(result) => {\r\n            setFlag(result);\r\n          });\r\n          \r\n        setAddress(\"\");\r\n      } catch (error) { // Handle an error for the wrong query\r\n        setNotification({\r\n          content: 'The city name \" ',\r\n          name: e,\r\n          content2:' \" does not match any city name. If you are not confident you can check ',\r\n          content3:' list for all cities',\r\n          type: 'Error'\r\n      })\r\n      // Delay the notification component for 5 second\r\n      setTimeout(() => {\r\n          setNotification(null)\r\n      }, 5000)\r\n      } \r\n    }\r\n  }\r\n  // Handle the users' choice from the search-bar list to extract the first name of the city.\r\n  const handleSelect = async (e) => {\r\n    let regix = e.split(\",\")[0];\r\n    search(regix);\r\n    console.log(regix)\r\n  };\r\n  // One time rendering used to check if the view state has changed or not to \r\n  // make a new search on the chosen city from view button in favourites component.\r\n  useEffect(() => {\r\n    e = props.city\r\n    if(typeof e != 'undefined'){\r\n    let regix = e.split(\",\")[0];\r\n    search(regix);\r\n    }\r\n  }, [view])\r\n  \r\nreturn( \r\n  <div className=\"\"> \r\n    {/* Search-bar */}\r\n    <PlacesAutocomplete\r\n                value={address}\r\n                onChange={setAddress}\r\n                onClick={handleSelect}\r\n                onSelect={handleSelect}\r\n                shouldFetchSuggestions={address.length >= 2}\r\n                highlightFirstSuggestion={true}\r\n              >\r\n                {({\r\n                  getInputProps,\r\n                  suggestions,\r\n                  getSuggestionItemProps,\r\n                }) => (\r\n                  <div className=\"HeadSearech\">\r\n                    <input\r\n                      {...getInputProps({ placeholder: `Search Places...` })}\r\n                      className=\"input-search\"\r\n                    />\r\n                    <FontAwesomeIcon icon={faSearch} color=\"white\" />\r\n                    <animated.div style={iconan}>\r\n                    <div className=\"search-list\" >\r\n                      {suggestions.map((suggestion) => {\r\n                        return (\r\n                          <div key ={suggestion.description} className=\"search-items\">\r\n                            <div {...getSuggestionItemProps(suggestion)}>\r\n                            <ul className=\"\">\r\n                              <li  className=\"suggeste\">\r\n                                <div  className=\"suggesteCh\">\r\n                                  <div className=\"searchItem\">\r\n                                  <Link to={`/city/${suggestion.description.split(\",\")[0]}`}>\r\n                                  <span className=\"searchRes\">{suggestion.description}</span>\r\n                                  </ Link>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          </div> \r\n                        );\r\n                      })}\r\n                    </div>\r\n                    </animated.div>\r\n                  </div>\r\n                )}\r\n      </PlacesAutocomplete>\r\n      <Notification message={notification} />\r\n    </div>\r\n  )\r\n}\r\nexport default Search","// Dispaly the time and data of the user\r\nimport React, {useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UseDate = () => {\r\n    const locale = 'en';\r\n    const [today, setDate] = useState(new Date()); \r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n        setDate(new Date());\r\n      }, 60 * 1000);\r\n      return () => {\r\n        clearInterval(timer);\r\n      }\r\n    }, []);\r\n    const day = today.toLocaleDateString(locale, { weekday: 'long' });\r\n    const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, { month: 'long' })}\\n\\n`;\r\n    const hour = today.getHours();\r\n    const wish = `Good ${(hour < 12 && 'Morning') || (hour < 17 && 'Afternoon') || 'Evening'} `;\r\n    const time = today.toLocaleTimeString(locale, { hour: 'numeric', hour12: true, minute: 'numeric' });\r\n    return(\r\n      <div className=\"dateTime\">\r\n        <div className=\"date\">{date}</div>\r\n        <div className=\"time\">{time}</div>\r\n        <div className=\"wish\">{wish}</div>\r\n        <Link to={`/`}>\r\n        <div className=\"home\">Home</div>\r\n        </Link>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  export default UseDate","// Display the entrance card in the home page \r\n\r\nimport React from 'react'\r\n// Use FontAwesomeIcon to display github and pdf icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faFile } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Card = () => {\r\n    return(\r\n        <div className=\"page-wrap\">\r\n              <div id=\"card1\" className=\"card\">\r\n                <a href=\"https://www.jamk.fi/fi/Etusivu/\" target=\"_blank\">\r\n                    <div className=\"center\">\r\n                        <img id=\"headshot\" src=\"https://i.ibb.co/8NQVBt3/cXoB6y6n.png\" />\r\n                    </div>\r\n                </a>\r\n                <div className=\"content\">\r\n                  <h1>WeatherApp</h1>\r\n                  <p className=\"clickable\">\r\n                  This is was made as assignment for YTSP0300 - Application Frameworks course by Bassam AlAsadi.\r\n                  </p> \r\n                  <h3>Documentation</h3>\r\n                  <div className=\"icon-block center clickable\">\r\n                    <a href=\"//github.com/bassamalasadi/weatherapp/tree/master\" target=\"_blank\">\r\n                      <FontAwesomeIcon size='3x' icon={ faGithub} />\r\n                    </a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <a href=\"//github.com/bassamalasadi/weatherapp/blob/master/Bassam_Alasadi_stack_research_YTSP0300.pdf\" target=\"_blank\">\r\n                      <FontAwesomeIcon size='3x' icon={ faFile } />\r\n                      \r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>  \r\n    )\r\n}\r\n\r\nexport default Card","import React,{useContext} from 'react'\r\nimport {SearchContext} from \"../Context/SearchContext\"\r\nimport Favourite from \"../components/Favourites.Component\";\r\nimport Search from \"../components/Search.Component\"\r\nimport {useSpring, animated} from 'react-spring'\r\nimport UseDate from '../components/timeDate';\r\nimport Card from '../components/Card.Component'\r\n\r\nfunction HomePage(){\r\n  /*\r\n  Use the view state as a parameter to pass city name from the \r\n  view botton in favourites component to Search-bar in HomePage  \r\n  */\r\n  const { value5} = useContext(SearchContext)\r\n  const [view] = value5\r\n  // iconan used to make some delay in display components\r\n  const iconan = useSpring({opacity: 1, from: {opacity: 0},transition: '1s'})\r\n\r\n    return(  \r\n      <div className=\"App\"> \r\n      {/* Date and time component  */}\r\n      <UseDate />\r\n      <main>\r\n          <div>\r\n            {/* Search-bar component  */}\r\n            <Search city={view} />        \r\n          </div> \r\n            {/* Favourites component   */}\r\n            <Favourite/>\r\n            <animated.div style={iconan}>\r\n              {/* Documentation component  */}\r\n              <Card />\r\n            </animated.div>\r\n      </main>\r\n    </div>\r\n    )\r\n  }    \r\nexport default HomePage\r\n\r\n","import React from \"react\";\r\nimport Icon from \"./Icons.Componet\";\r\nimport {useSpring, animated} from 'react-spring'\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nconst Weather = (props) => {\r\n  \r\n  const iconan = useSpring({opacity: 1, from: {opacity: 0},transition: '1s'})\r\n  // Pass different parameters from citypage\r\n  let weather = props.weather\r\n  let flag = props.flag\r\n  let forecast = props.forecast\r\n  let items = []\r\n\r\n\r\n  if(typeof forecast.list != \"undefined\"){\r\n    // Loop through the forecasting props to extract 40 weather prediction with the date and time \r\n    for(let i = 0; i < 40 ; i++){\r\n      let time = forecast.list[i].dt_txt\r\n      items.push(\r\n        <div className=\"d-time\" key={forecast.list[i].dt}>\r\n          <div className=\"hourly\" >\r\n            <div className=\"hourly-t\">\r\n              {time.slice(0,10)} \r\n                &nbsp;\r\n                  <div className=\"hourly-w\">  {Math.round(forecast.list[i].main.temp - 273.15)}°C</div>\r\n                &nbsp;\r\n              {time.slice(11,16)}\r\n            </div>\r\n          </div>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <animated.div style={iconan}>\r\n      {/* Display the flag, temp degree in celsius, and the weather Icon */}\r\n    <div className=\"leftSideContainer\">\r\n      <img src={flag.flag} alt=\"flag\" className=\"countray-flag\" /> <br />        \r\n      <div className=\"degree\">\r\n        <div className=\"weather-flag-icon\">{typeof props != \"undefined\" ? <Icon icon={weather.weather[0].id}  /> : \"\"}  </div>\r\n          {Math.round(weather.main.temp - 273.15)}°C \r\n        </div>\r\n    </div> \r\n    {/* Display the city and country name, various information about the weather, and finally the 5 days prediction by 8-times per day. */}\r\n    <div className=\"info-box\" >\r\n      <div className=\"weather-container\">     \r\n        <div className=\"flag-box\">\r\n          <div className=\"weather-city-name\">{weather.name}, {weather.sys.country}</div> \r\n            <br />\r\n          <div className=\"weather-country-name\">{flag.nativeName} - {flag.name}</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"cap-box\">\r\n            <div className=\"weather-extra\">Capital : {flag.capital}</div>\r\n            <div className=\"weather-extra\">Region : {flag.region}</div>\r\n            <div className=\"weather-extra\">Humidity : {weather.main.humidity}%</div>\r\n            <div className=\"weather-extra\">Wind : {weather.wind.speed} m/s</div>\r\n            <div className=\"weather-extra\">Pressure : {weather.main.pressure} hPa</div>\r\n            <div className=\"weather-extra\">Description: {weather.weather[0].description}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"hourly-scroll\">\r\n        <PerfectScrollbar style={{ width: 270, height: 239 }}>\r\n          {items}\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div> \r\n    </div>\r\n    </animated.div>\r\n  );\r\n};\r\nexport default Weather;","// Display 5 Days' forecast\r\n\r\nimport React from \"react\";\r\nimport Icon from \"./Icons.Componet\";\r\nimport {useSpring, animated} from 'react-spring'\r\nconst Forecast = React.memo((props) => {\r\n  const iconan = useSpring({opacity: 1, from: {opacity: 0},transition: '1s'})\r\n  // An array of the days\r\n  let gsDayNames = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const items = [];\r\n  if (typeof props.data.list != \"undefined\") {\r\n    // The Forecast API provide data for 5 days, and each day contain 8-time different forecast every 3 hours\r\n    // Loop through these 40 predicts and extract one predict for each day by increasing our identifier 8 each time.\r\n    for (let i = 0; i < 39; i += 8) {\r\n      // Extract only the date of the day\r\n      let date = props.data.list[i].dt_txt.substring(0, 10);\r\n      // set your local date\r\n      let d = new Date(date);\r\n      //Set through the provided data you day\r\n      let dayName = gsDayNames[d.getDay()];\r\n      // Push the date and the forecast data to the array\r\n      items.push(\r\n        <div className=\"forecast-box\" key={i}>\r\n          <div>\r\n            <h4>{dayName}</h4>\r\n            <div className=\"\">\r\n              {Math.round(props.data.list[i].main.temp - 273.15)}°C{\" \"}\r\n            </div>\r\n            <Icon icon={props.data.list[i].weather[0].id} />\r\n            <h6>{props.data.list[i].dt_txt.substring(0, 10)}</h6>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n  <div>\r\n    <animated.div style={iconan}>\r\n    {items}\r\n    </animated.div>\r\n  </div>);\r\n})\r\n\r\nexport default Forecast;","// Display the Add button to add the favourite city to your Favourites list \r\n// Display the Copy button to copy the url route of a specific city\r\nimport React, {useContext} from 'react'\r\nimport {FavouritesContext} from '../Context/FavouritesContext'\r\nimport { BsFillStarFill } from \"react-icons/bs\"\r\nimport { AiFillCopy } from \"react-icons/ai\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {useSpring, animated} from 'react-spring'\r\nconst AddandCopy = (props) => {\r\n    const iconan = useSpring({opacity: 1, from: {opacity: 0},transition: '1s'})\r\n    const [fave,setFave] = useContext(FavouritesContext);  \r\n    const weather = props.props\r\n    const items = {...localStorage}\r\n    // Push all the items from your browser local storage to Array\r\n    let data = []\r\n    Object.keys(items).map((e) => { \r\n        data.push(e)\r\n        return 0\r\n    })\r\n    // \"Add button\" to add city to your browser local storage \r\n    const add = (e) => {\r\n        // Prevent a browser reload or refresh\r\n        e.preventDefault()\r\n            // Check if the city name is not included in the local storage\r\n            if(!data.includes(weather.name)){\r\n                // Set all the city's information in the \"SetFave\" state\r\n                setFave(prev =>[ ...prev, {\r\n                    id:weather.coord.lat,\r\n                    name:weather.name,\r\n                    temp:weather.main.temp,\r\n                    icon:weather.weather[0].id\r\n                  }]) \r\n                // Set the city's name in the browser local storage \r\n                localStorage.setItem(`${weather.name}`, JSON.stringify(weather.name));\r\n            }\r\n    }\r\n    return (\r\n        <animated.div style={iconan}>\r\n        <div>  \r\n            {!data.includes(weather.name) ?\r\n                <button value={props.name} type=\"button\"  className=\"btn btn-warning buton\" onClick={add}>\r\n                    <BsFillStarFill /> Add {weather.name} to Favourites\r\n                </button>\r\n                : null\r\n            }\r\n            {\" \"}{\" \"}{\" \"}\r\n            <CopyToClipboard text={window.location.href}>\r\n            <button type=\"button\" className=\"btn btn-warning button buton\">\r\n                  <AiFillCopy className=\"\" /> Copy {weather.name} Weather\r\n            </button>\r\n            </CopyToClipboard>\r\n        </div> \r\n        </animated.div>\r\n    )\r\n}\r\nexport default AddandCopy","import React,{useContext, useEffect} from 'react'\r\nimport {SearchContext} from \"../Context/SearchContext\"\r\nimport Weather from \"../components/Weather.Component\";\r\nimport Forecast from \"../components/Forecast.Component\";\r\nimport AddandCopy from \"../components/AddAndCopy.Component\";\r\nimport Favourite from \"../components/Favourites.Component\";\r\nimport Search from \"../components/Search.Component\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport UseDate from '../components/timeDate';\r\n\r\nfunction CityPage(){\r\n    const cityname = useParams()\r\n    const {value, value2, value3, value5, value6} = useContext(SearchContext)\r\n    const [weather] = value\r\n    const [forecast] = value2\r\n    const [flag] = value3\r\n    const [view, setView] = value5\r\n    const [date] = value6\r\n    useEffect(() => {\r\n       setView(cityname.cityname)\r\n    }, [cityname])\r\n    return(    \r\n        <div className=\"App\">  \r\n        <UseDate />\r\n            <main>    \r\n            <div >\r\n            <Search city={view} />              \r\n            </div>      \r\n                    {/* display two button */}\r\n                    <div className=\"mainCard\">\r\n                    {typeof weather.main != \"undefined\" ? (\r\n                    <div className=\"\">\r\n                        <div className=\"cards\">\r\n                        <AddandCopy  props={weather}/><br />\r\n                        </div>\r\n                        <div className=\"cards\">\r\n                        <Weather weather={weather} flag={flag} date={date} forecast={forecast} /><br />\r\n                        </div>\r\n                        <Forecast data={forecast} />          \r\n                    </div>\r\n                    ) : (\r\n                    \"\"\r\n                    )}\r\n                    </div>\r\n                    <Favourite/>\r\n                </main>\r\n            </div>      \r\n    )}\r\nexport default CityPage","import React from 'react'\nimport {FavouritesProvider} from \"./Context/FavouritesContext\"\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport {SearchProvider} from \"./Context/SearchContext\"\nimport HomePage from \"./pages/HomePage\"\nimport CityPage from \"./pages/CityPage\"\nimport {HashRouter as Router,Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <FavouritesProvider>\n      <SearchProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n      <div>\n          <Route exact path='/' component={HomePage} /> \n          <Route exact path={`/city/:cityname`} component={CityPage} />\n      </div>\n      </Router>\n      </SearchProvider>\n    </FavouritesProvider>\n  );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}