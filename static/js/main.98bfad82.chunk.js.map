{"version":3,"sources":["components/Icons.Componet.jsx","components/Weather.Component.jsx","components/Forecast.Component.jsx","Context/FavouritesContext.jsx","Context/SearchContext.jsx","components/Favourites.Component.jsx","components/AddAndCopy.Component.jsx","notification/Notification.jsx","components/Search.Component.jsx","App.js","index.js"],"names":["Icon","props","icon","rangeId","src","alt","className","Weather","weather","flag","date","useState","sec","setSec","min","setMin","second","parseInt","slice","minute","clock","useEffect","interval","setInterval","prev","clearInterval","Time","Math","round","main","temp","nativeName","name","sys","country","capital","region","humidity","wind","speed","pressure","description","Forecast","React","memo","gsDayNames","items","data","list","i","dt_txt","substring","dayName","Date","getDay","push","key","id","FavouritesContext","createContext","FavouritesProvider","fave","setFave","localStorage","Object","keys","map","e","fetch","then","res","json","result","coord","lat","lon","console","log","Provider","value","children","SearchContext","SearchProvider","setWeather","forecast","setForecast","setFlag","address","setAddress","view","setView","setDate","value2","value3","value4","value5","value6","Favourite","useContext","setShowModel","handleChange","a","wait","onClick","trigger","type","idx","splice","removeItem","del","indexOf","position","Card","Header","handleView","Body","iconId","style","backgroundImage","Title","Text","width","height","AddandCopy","includes","preventDefault","setItem","JSON","stringify","Notification","message","content","content2","href","target","rel","content3","api","Search","notification","setNotification","search","dir","response","setTimeout","handleSelect","regix","split","city","onChange","onSelect","shouldFetchSuggestions","length","highlightFirstSuggestion","getInputProps","suggestions","getSuggestionItemProps","placeholder","faSearch","color","suggestion","App","MainPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98bfad82.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Icon = (props) => {\r\n  // console.log(\"icon\", props);\r\n  let icon = \"\";\r\n  let rangeId = props.icon;\r\n  switch (true) {\r\n    case rangeId >= 200 && rangeId <= 232:\r\n      icon = \"11d\";\r\n      break;\r\n    case rangeId >= 300 && rangeId <= 321:\r\n      icon = \"09d\";\r\n      break;\r\n    case rangeId >= 500 && rangeId <= 531:\r\n      icon = \"10d\";\r\n      break;\r\n    case rangeId >= 600 && rangeId <= 622:\r\n      icon = \"13d\";\r\n      break;\r\n    case rangeId >= 701 && rangeId <= 781:\r\n      icon = \"50d\";\r\n      break;\r\n    case rangeId === 800:\r\n      icon = \"01d\";\r\n      break;\r\n    case rangeId >= 801 && rangeId <= 804:\r\n      icon = \"03d\";\r\n      break;\r\n    default:\r\n      icon = \"03d\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n        alt=\"\"\r\n        className=\"icon\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport Icon from \"./Icons.Componet\";\r\n\r\nconst Weather = (props) => {\r\n  \r\n  let weather = props.weather\r\n  let flag = props.flag\r\n  let date = props.date\r\n\r\n  const [sec, setSec] = useState(0)\r\n  const [min , setMin] = useState(0)\r\n  // const [clo, setClo] = useState(0)\r\n  let second = parseInt(date.slice(6,8))\r\n  let minute = parseInt(date.slice(3,5))\r\n  let clock = parseInt(date.slice(0,2))\r\n  useEffect(() => {\r\n      if(second !== 'NAN'){\r\n        setSec(second)\r\n        setMin(minute)\r\n        const interval = setInterval(() => {\r\n            setSec(prev => prev < 59 ? prev + 1 : (\r\n              setSec(0),\r\n              setMin(minute + 1) ))\r\n        }, 1000);\r\n      return () => clearInterval(interval);\r\n      }\r\n  }, [second])\r\n  \r\n  let Time =() => {\r\n    \r\n    return(\r\n      <div>\r\n        {clock}:{min}:{sec}\r\n      </div>\r\n    )\r\n  }\r\n \r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"info-box\" >\r\n        <div className=\"weather-container\">\r\n          <div className=\"leftSideContainer\">\r\n              <img src={flag.flag} alt=\"flag\" className=\"countray-flag\" /> <br />\r\n                       \r\n              <div className=\"degree\">{Math.round(weather.main.temp - 273.15)}°C \r\n               {/* {typeof props != \"undefined\" ? <Icon icon={weather.icon}  /> : \"\"} */}\r\n               <div className=\"currTime\">\r\n                {clock >= 0 ? <Time /> : ''}          \r\n               \r\n               </div>\r\n               </div>\r\n          </div>\r\n          <div className=\"flag-box\">\r\n          <div className=\"weather-extra-countryName\">{flag.nativeName} - {flag.name}</div>\r\n          <div className=\"weather-city-name\">{weather.name}, {weather.sys.country}</div> \r\n          {/* <div className=\"weather-extra2\">Current Time in {flag.capital} : {clock}:{min}:{sec}</div> */}\r\n\r\n          </div>\r\n         \r\n          <div className=\"flag-box\">\r\n            <div className=\"\">\r\n              <h5 className=\"weather-extra\">Capital : {flag.capital}</h5>\r\n              <h5 className=\"weather-extra\">Region : {flag.region}</h5>\r\n              <h5 className=\"weather-extra\">Humidity : {weather.main.humidity}%</h5>\r\n              <h5 className=\"weather-extra\">Wind : {weather.wind.speed} m/s</h5>\r\n              <h5 className=\"weather-extra\">Pressure : {weather.main.pressure} hPa</h5>\r\n              <div className=\"weather-extra\">Weather : {weather.weather[0].description}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n\r\n\r\n","import React from \"react\";\r\nimport Icon from \"./Icons.Componet\";\r\nconst Forecast = React.memo((props) => {\r\n  // console.log(props.data.list[0].weather[0].id);\r\n\r\n  let gsDayNames = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const items = [];\r\n  if (typeof props.data.list != \"undefined\") {\r\n    for (let i = 0; i < 39; i += 8) {\r\n      let date = props.data.list[i].dt_txt.substring(0, 10);\r\n      let d = new Date(date);\r\n      let dayName = gsDayNames[d.getDay()];\r\n      items.push(\r\n        <div className=\"forecast-box\" key={i}>\r\n          <div>\r\n            <h4>{dayName}</h4>\r\n            {/* <h6>{props.data.list[i].weather[0].description}</h6> */}\r\n            <div className=\"\">\r\n              {Math.round(props.data.list[i].main.temp - 273.15)}°C{\" \"}\r\n            </div>\r\n            <Icon icon={props.data.list[i].weather[0].id} />\r\n            <h6>{props.data.list[i].dt_txt.substring(0, 10)}</h6>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return <div>{items}</div>;\r\n})\r\n\r\nexport default Forecast;\r\n","import React , {useState, useEffect, createContext} from 'react'\r\n\r\n\r\nexport const FavouritesContext = createContext()\r\n\r\nexport const FavouritesProvider = (props) => {\r\n  const [fave , setFave] = useState([])\r\n  const items = {...localStorage}\r\n \r\n  useEffect(() => {\r\n    \r\n    Object.keys(items).map((e) => {\r\n      try {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=cbf3e6bbd09a990359dddac086ea6fb0`)\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            setFave(fave =>[ ...fave, {\r\n              id:result.coord.lat,\r\n              name:result.name,\r\n              temp:result.main.temp,\r\n              icon:result.weather[0].id,\r\n              main:result.weather[0].main,\r\n              description:result.weather[0].description,\r\n              lon:result.coord.lon,\r\n              lat:result.coord.lat\r\n            }])  \r\n    })\r\n  }catch{\r\n    console.log(\"not working\")\r\n    }})}, [])\r\n   \r\n    return(\r\n        <FavouritesContext.Provider value={[fave, setFave]}>\r\n            {props.children}\r\n        </FavouritesContext.Provider>\r\n    )\r\n}","import React , {useState, createContext} from 'react'\r\n\r\n\r\n\r\nexport const SearchContext = createContext()\r\n\r\nexport const SearchProvider = (props) => {\r\n    const [weather, setWeather] = useState({});\r\n    const [forecast, setForecast] = useState({});\r\n    const [flag, setFlag] = useState({});\r\n    const [address, setAddress] = useState(\"\");\r\n    const [view, setView] = useState(\"\")\r\n    const [date, setDate] = useState(\"\")\r\n\r\n    return(\r\n        <SearchContext.Provider value={{\r\n            value:[weather,setWeather],\r\n            value2:[forecast,setForecast],\r\n            value3:[flag, setFlag],\r\n            value4:[address, setAddress],\r\n            value5:[view,setView],\r\n            value6:[date,setDate]\r\n            }}>\r\n            {props.children}\r\n        </SearchContext.Provider>\r\n    )\r\n}","import React, { useState,useContext } from \"react\";\r\nimport { BsFillStarFill } from \"react-icons/bs\";\r\nimport Icon from \"./Icons.Componet\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport Delay from 'react-delay'\r\nimport {FavouritesContext} from '../Context/FavouritesContext'\r\nimport {SearchContext} from '../Context/SearchContext'\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Favourite = React.memo((props) => {\r\n  const { value5 } = useContext(SearchContext)\r\n  const [view, setView] = value5\r\n  const [fave, setFave] = useContext(FavouritesContext)\r\n  const [showModel, setShowModel] = useState(false)\r\n  \r\n  const del = (idx) => {\r\n    const temp = [...fave]\r\n    const name = temp[idx].name \r\n    temp.splice(idx, 1)\r\n    setFave(temp)\r\n    localStorage.removeItem(`${name}`);\r\n  };\r\n  const handleChange = async () => {};\r\n\r\n  const handleView = (e) => {\r\n    setShowModel(true)\r\n    setView(e)\r\n  }\r\n  \r\n  const list =   \r\n    fave.map((e) => {\r\n     return(\r\n        <div key={e.id}>\r\n          <Delay wait={100} >\r\n          <Popup className=\"\"\r\n            onClick={handleChange}\r\n            trigger={\r\n              <div className=\"scrollbar element\">\r\n                <div>\r\n                \r\n                  {e.name} {Math.round(e.temp - 273.15)}°C <Icon icon={e.icon} />{\" \"}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-warning star\"\r\n                    value={e.name}\r\n                    onClick={() => del(fave.indexOf(e))}\r\n                  >\r\n                    <BsFillStarFill /> Remove\r\n                  </button>  \r\n                </div>\r\n              </div>\r\n            }\r\n            position=\"left center\"\r\n          >\r\n            \r\n\r\n            <Card.Header><nobr><h4>{e.name}</h4> <div>\r\n            <button className=\"btn btn-success\" onClick={()=> handleView(e.name)}> View</button>\r\n            </div></nobr></Card.Header>\r\n            \r\n            {typeof e.description != \"undefined\" ? (\r\n              <Card.Body>\r\n              <div id={e.iconId} key={e.name}>\r\n              <div\r\n                key={e.iconId}\r\n                value={e.iconId}\r\n                style={{ backgroundImage: `url(${props.flag})` }}\r\n              >\r\n\r\n                <div>\r\n                <Card.Title> Description </Card.Title>\r\n                \r\n                </div>\r\n                <Card.Text>\r\n              \r\n                {e.main}\r\n                {e.description}\r\n                <br />\r\n                <br />\r\n                Coordinates\r\n                Latitude: {e.lat}<br />\r\n                Longitude: {e.lon}<br />\r\n                \r\n                </Card.Text>\r\n              </div>\r\n            </div>\r\n            \r\n            </Card.Body>\r\n            ): (\r\n              \"\"\r\n            )}\r\n            \r\n          </Popup>\r\n          </Delay>\r\n        </div>\r\n     )\r\n    })\r\n  return (\r\n    <div>\r\n      \r\n      <div className=\" favourite\">\r\n            <div > Favourites! </div>\r\n              <div className=\"scroll\">\r\n                <PerfectScrollbar style={{ width: 200, height: 600 }}>\r\n                  {list}\r\n                </PerfectScrollbar>\r\n              </div>\r\n          </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default Favourite;","import React, { useState,useContext} from 'react'\r\nimport {FavouritesContext} from '../Context/FavouritesContext'\r\nimport { BsFillStarFill } from \"react-icons/bs\"\r\nimport { AiFillCopy } from \"react-icons/ai\";\r\n\r\n\r\nconst AddandCopy = (props) => {\r\n\r\n    const [fave,setFave] = useContext(FavouritesContext)   \r\n    const weather = props.props\r\n    const items = {...localStorage}\r\n    let data = []\r\n    Object.keys(items).map((e) => { \r\n        data.push(e)\r\n        return 0\r\n    })\r\n    let show = {} \r\n    const add = (e) => {\r\n        e.preventDefault()\r\n        \r\n            if(!data.includes(weather.name)){\r\n                setFave(prev =>[ ...prev, {\r\n                    id:weather.coord.lat,\r\n                    name:weather.name,\r\n                    temp:weather.main.temp,\r\n                    icon:weather.weather[0].id\r\n                  }]) \r\n                localStorage.setItem(`${weather.name}`, JSON.stringify(weather.name));\r\n            \r\n            }\r\n    }\r\n    return (\r\n        <div>  \r\n            {!data.includes(weather.name) ?\r\n                <button value={props.name} type=\"button\"  className=\"btn btn-warning buton\" onClick={add}>\r\n                    <BsFillStarFill /> Add {weather.name} to Favourites\r\n                </button>\r\n                : null\r\n            }\r\n            \r\n            {\" \"}{\" \"}{\" \"}\r\n            <button type=\"button\" className=\"btn btn-warning button buton\">\r\n                  <AiFillCopy className=\"\" /> Copy {weather.name} Weather\r\n                </button>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default AddandCopy","  \r\nimport React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\nlet url = 'https://en.wikipedia.org/wiki/List_of_towns_and_cities_with_100,000_or_more_inhabitants/cityname:_A'\r\n    return (\r\n        <div className={message.type}>\r\n            { message.name ?(\r\n              \r\n            <div className=\"Notifi\">  \r\n                <div className=\"NotifiHeader\"> &nbsp;  Notification\r\n                </div>  \r\n                <div className=\"message\">\r\n                    {message.content}\r\n                    <nobr className=\"cityName\">\r\n                         {message.name} \r\n                    </nobr>{message.content2} \r\n                    <nobr className=\"wiki\">\r\n                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\"> Wikipedia</a>\r\n                    </nobr>\r\n                    {message.content3}\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n            ):(\r\n                ''\r\n            )\r\n            }\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect,useContext} from 'react'\r\nimport {SearchContext} from '../Context/SearchContext'\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Notification from \"../notification/Notification\"\r\nconst api = {\r\n  keyWeather: \"cbf3e6bbd09a990359dddac086ea6fb0\",\r\n  weather: \"https://api.openweathermap.org/data/2.5/weather\",\r\n  forecast: \"https://api.openweathermap.org/data/2.5/forecast\",\r\n};\r\n\r\nconst Search = (props) => {\r\n  \r\n  const {value, value2, value3, value4, value5, value6} = useContext(SearchContext)\r\n  const [weather, setWeather] = value\r\n  const [forecast, setForecast] = value2\r\n  const [flag, setFlag] = value3\r\n  const [address, setAddress] = value4\r\n  const [view, setView] = value5\r\n  const [date, setDate] = value6\r\n  const [notification, setNotification] = useState('')\r\n  let e = ''\r\n  // take first word from cities\r\n  const search = async (e) => {\r\n    if(e != ''){\r\n      let dir = \"\";\r\n    try {\r\n      // fetch weather api\r\n      await fetch(`${api.weather}?q=${e}&appid=${api.keyWeather}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          dir = result.sys.country;\r\n        });\r\n      // fetch forecast api\r\n      await fetch(`${api.forecast}?q=${e}&appid=${api.keyWeather}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setForecast(result);\r\n        });\r\n      // fetch cities' data to display flag and countries' information\r\n      await fetch(`https://restcountries.eu/rest/v2/alpha/${dir}`)\r\n        .then(response => response.json())\r\n        .then((result) => {\r\n          setFlag(result);\r\n          //fetch countries data and time\r\n      fetch(`https://rapidapi.p.rapidapi.com/v1/locale/timezones/${result.region}__${result.capital}/dateTime`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n              \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\",\r\n              \"x-rapidapi-key\": \"5427736e2bmsh4d65d165c1a1ff7p195e42jsn564120e2a11b\"\r\n            }\r\n          })\r\n          .then(response => response.json())\r\n          .then((result) => {\r\n            let data = result.data.slice(11,19)\r\n            setDate(data)\r\n          })\r\n        });\r\n      \r\n    \r\n      setAddress(\"\");\r\n    } catch (error) {\r\n      setNotification({\r\n        content: 'The city name \" ',\r\n        name: e,\r\n        content2:' \" does not match any city name. If you are not confident you can check ',\r\n        content3:' list for all cities',\r\n        type: 'Error'\r\n    })\r\n    setTimeout(() => {\r\n        setNotification(null)\r\n    }, 5000)\r\n    } }\r\n    }\r\n    \r\n  const handleSelect = async (e) => {\r\n    let regix = e.split(\",\")[0];\r\n    console.log('regix',regix)\r\n    search(regix);\r\n  };\r\n  useEffect(() => {\r\n    e = props.city\r\n    let regix = e.split(\",\")[0];\r\n    search(regix);\r\n  }, [view])\r\n  // let placeId = \"\"\r\n  \r\nreturn( \r\n  <div className=\"\">\r\n    <PlacesAutocomplete\r\n                value={address}\r\n                onChange={setAddress}\r\n                onClick={handleSelect}\r\n                onSelect={handleSelect}\r\n                shouldFetchSuggestions={address.length >= 2}\r\n                highlightFirstSuggestion={true}\r\n              >\r\n                {({\r\n                  getInputProps,\r\n                  suggestions,\r\n                  getSuggestionItemProps,\r\n                 \r\n                }) => (\r\n                  <div className=\"HeadSearech\">\r\n                    <input\r\n                      {...getInputProps({ placeholder: `Search Places...` })}\r\n                      className=\"input-search\"\r\n                    />\r\n                    <FontAwesomeIcon icon={faSearch} color=\"white\" />\r\n                    <div className=\"search-list\" >\r\n                      {suggestions.map((suggestion) => {\r\n                        return (\r\n                          <div key ={suggestion.description} className=\"search-items\">\r\n                            <div \r\n                            {...getSuggestionItemProps(suggestion)}\r\n                          >\r\n                            <ul className=\"\">\r\n                              <li  className=\"suggeste\">\r\n                                <div  className=\"suggesteCh\">\r\n                                  <div className=\"searchIcon\"></div>\r\n                                  <i className=\"material-icons\">location_on</i>\r\n                                  <div className=\"searchItem\">\r\n                                  <span className=\"searchRes\">{suggestion.description}</span>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          </div> \r\n                        );\r\n                      })}\r\n                    \r\n                    </div>\r\n                    \r\n                  </div>\r\n                )}\r\n      </PlacesAutocomplete>\r\n      <Notification message={notification} />\r\n    </div>\r\n  )\r\n}\r\nexport default Search","import React, { useContext } from \"react\";\nimport Weather from \"./components/Weather.Component\";\nimport Forecast from \"./components/Forecast.Component\";\nimport Favourite from \"./components/Favourites.Component\";\nimport AddandCopy from \"./components/AddAndCopy.Component\";\nimport {FavouritesProvider} from \"./Context/FavouritesContext\"\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport Search from \"./components/Search.Component\"\nimport {SearchContext,SearchProvider} from \"./Context/SearchContext\"\nfunction App() {\n  function MainPage(){\n    const {value, value2, value3, value5, value6} = useContext(SearchContext)\n    const [weather, setWeather] = value\n    const [forecast, setForecast] = value2\n    const [flag, setFlag] = value3\n    const [view, setView] = value5\n    const [date, setDate] = value6\n    return(\n      <div className=\"App\">  \n      <main>\n            <div>\n              <Search city={view} />              \n            </div>\n            {/* display two button */}\n            <div className=\"mainCard\">\n            {typeof weather.main != \"undefined\" ? (\n              <div className=\"\">\n                <div className=\"cards\">\n                <AddandCopy  props={weather}/><br />\n                </div>\n                  <div className=\"cards\">\n                   <Weather weather={weather} flag={flag} date={date} /><br />\n                  </div>\n                <Forecast data={forecast} />\n              </div>\n            ) : (\n              \"\"\n            )}\n            </div>\n         <Favourite/>\n      </main>\n    </div>\n    )\n  }\n  return (\n    <FavouritesProvider>\n      <SearchProvider>\n        <MainPage />\n    </SearchProvider>\n    </FavouritesProvider>\n  );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}